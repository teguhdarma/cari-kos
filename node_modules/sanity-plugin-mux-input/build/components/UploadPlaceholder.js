"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ui = require("@sanity/ui");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _fi = require("react-icons/fi");

var _UploadPlaceholder = _interopRequireDefault(require("./UploadPlaceholder.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class UploadPlaceholder extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
        invalidPaste = _this$props.invalidPaste,
        invalidFile = _this$props.invalidFile,
        hasFocus = _this$props.hasFocus,
        isDraggingOver = _this$props.isDraggingOver;
    var fileClassNames = [_UploadPlaceholder.default.dropFile];
    var pasteClassNames = [_UploadPlaceholder.default.pasteFile];

    if (invalidFile) {
      fileClassNames.push(_UploadPlaceholder.default.invalidFile);
    }

    if (isDraggingOver) {
      fileClassNames.push(_UploadPlaceholder.default.isDraggingOver);
    }

    if (invalidPaste) {
      pasteClassNames.push(_UploadPlaceholder.default.invalidPaste);
    }

    if (hasFocus) {
      pasteClassNames.push(_UploadPlaceholder.default.hasFocus);
    }

    return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      justify: "center",
      align: "center",
      padding: 3
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: fileClassNames.join(' ')
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: _UploadPlaceholder.default.iconContainer
    }, /*#__PURE__*/_react.default.createElement(_fi.FiUpload, {
      size: "0.5em"
    })), /*#__PURE__*/_react.default.createElement("p", {
      className: _UploadPlaceholder.default.strong
    }, /*#__PURE__*/_react.default.createElement("span", null, "Drop file ", invalidFile))), /*#__PURE__*/_react.default.createElement("div", {
      className: pasteClassNames.join(' ')
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: _UploadPlaceholder.default.iconContainer
    }, /*#__PURE__*/_react.default.createElement(_fi.FiCopy, _extends({}, invalidPaste ? {
      color: 'red'
    } : {}, {
      size: "0.5em"
    }))), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", {
      className: _UploadPlaceholder.default.strong
    }, /*#__PURE__*/_react.default.createElement("span", null, "Paste URL"))))));
  }

}

exports.default = UploadPlaceholder;

_defineProperty(UploadPlaceholder, "propTypes", {
  hasFocus: _propTypes.default.bool,
  invalidPaste: _propTypes.default.bool,
  invalidFile: _propTypes.default.bool,
  isDraggingOver: _propTypes.default.bool
});

UploadPlaceholder.defaultProps = {
  hasFocus: false,
  invalidPaste: false,
  invalidFile: false,
  isDraggingOver: false
};
//# sourceMappingURL=UploadPlaceholder.js.map