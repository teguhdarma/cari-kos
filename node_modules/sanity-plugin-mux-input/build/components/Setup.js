"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ui = require("@sanity/ui");

var _lodash = require("lodash");

var _default2 = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

var _default3 = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _secrets = require("../actions/secrets");

var _Setup = _interopRequireDefault(require("./Setup.css"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var propTypes = {
  onSave: _propTypes.default.func.isRequired,
  onCancel: _propTypes.default.func.isRequired,
  secrets: _propTypes.default.shape({
    token: _propTypes.default.string,
    secretKey: _propTypes.default.string,
    enableSignedUrls: _propTypes.default.bool,
    signingKeyId: _propTypes.default.string,
    signingKeyPrivate: _propTypes.default.string
  })
};

class MuxVideoInputSetup extends _react.Component {
  static getDerivedStateFromProps(nextProps, nextState) {
    if (!nextState.secrets) {
      return null;
    }

    if (nextProps.secrets) {
      return {
        token: nextProps.secrets.token,
        secretKey: nextProps.secrets.secretKey,
        enableSignedUrls: nextProps.secrets.enableSignedUrls,
        signingKeyId: nextProps.secrets.signingKeyId,
        signingKeyPrivate: nextProps.secrets.signingKeyPrivate
      };
    }

    return null;
  }

  constructor(props) {
    var _this;

    super(props);
    _this = this;

    _defineProperty(this, "tokenInputId", (0, _lodash.uniqueId)('MuxTokenInput'));

    _defineProperty(this, "secretKeyInputId", (0, _lodash.uniqueId)('MuxSecretInput'));

    _defineProperty(this, "enableSignedUrlsInputId", (0, _lodash.uniqueId)('MuxEnableSignedUrlsInput'));

    _defineProperty(this, "state", {
      token: null,
      secretKey: null,
      enableSignedUrls: false,
      isLoading: false,
      error: null
    });

    _defineProperty(this, "handleTokenChanged", event => {
      this.setState({
        token: event.currentTarget.value
      });
    });

    _defineProperty(this, "handleSecretKeyChanged", event => {
      this.setState({
        secretKey: event.currentTarget.value
      });
    });

    _defineProperty(this, "handleEnableSignedUrls", event => this.setState({
      enableSignedUrls: event.currentTarget.checked
    }));

    _defineProperty(this, "handleCancel", event => {
      this.props.onCancel();
    });

    _defineProperty(this, "handleOnSubmit", event => {
      event.preventDefault();
    });

    _defineProperty(this, "handleSaveToken", /*#__PURE__*/_asyncToGenerator(function* () {
      var handleError = err => {
        console.error(err); // eslint-disable-line no-console

        _this.setState({
          isLoading: false,
          error: 'Something went wrong saving the token. See console.error for more info.'
        });
      };

      _this.setState({
        isLoading: true
      });

      var _ref2 = _this.state || {},
          token = _ref2.token,
          secretKey = _ref2.secretKey,
          enableSignedUrls = _ref2.enableSignedUrls;

      var _ref3 = _this.state || {},
          signingKeyId = _ref3.signingKeyId,
          signingKeyPrivate = _ref3.signingKeyPrivate;

      try {
        yield (0, _secrets.saveSecrets)(token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate);
      } catch (err) {
        handleError('Error while trying to save secrets:', err);
        return;
      }

      if (enableSignedUrls) {
        var hasValidSigningKeys = yield (0, _secrets.haveValidSigningKeys)(signingKeyId, signingKeyPrivate);

        if (!hasValidSigningKeys) {
          try {
            var _yield$createSigningK = yield (0, _secrets.createSigningKeys)(),
                data = _yield$createSigningK.data;

            signingKeyId = data.id;
            signingKeyPrivate = data.private_key;
            yield (0, _secrets.saveSecrets)(token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate);
          } catch (_ref4) {
            var message = _ref4.message;
            // eslint-disable-next-line no-console
            console.log('Error while creating and saving signing key:', message);

            _this.setState({
              error: message
            });
          }
        }
      }

      _this.setState({
        isLoading: false
      });

      _this.props.onSave({
        token,
        secretKey,
        enableSignedUrls,
        signingKeyId,
        signingKeyPrivate
      });
    }));

    if (props.secrets) {
      var _props$secrets = props.secrets,
          token = _props$secrets.token,
          secretKey = _props$secrets.secretKey,
          enableSignedUrls = _props$secrets.enableSignedUrls,
          signingKeyId = _props$secrets.signingKeyId,
          signingKeyPrivate = _props$secrets.signingKeyPrivate;
      this.state.token = token;
      this.state.secretKey = secretKey;
      this.state.enableSignedUrls = enableSignedUrls;
      this.state.signingKeyId = signingKeyId;
      this.state.signingKeyPrivate = signingKeyPrivate;
    }

    this.firstField = /*#__PURE__*/_react.default.createRef();
  }

  componentDidMount() {
    this.firstField.current.focus();
  }

  render() {
    var _this$state = this.state,
        error = _this$state.error,
        isLoading = _this$state.isLoading;
    return /*#__PURE__*/_react.default.createElement(_ui.Box, {
      paddingRight: 4,
      paddingLeft: 4,
      paddingBottom: 4,
      paddingTop: 4,
      style: {
        position: 'relative'
      }
    }, /*#__PURE__*/_react.default.createElement("form", {
      onSubmit: this.handleOnSubmit
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4
    }, !this.state.token && /*#__PURE__*/_react.default.createElement(_ui.Card, {
      padding: [3, 3, 3],
      radius: 2,
      shadow: 1,
      tone: "primary"
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, "To set up a new access token, go to your", ' ', /*#__PURE__*/_react.default.createElement("a", {
      href: "https://dashboard.mux.com/settings/access-tokens",
      target: "_blank",
      rel: "noreferrer noopener"
    }, "account on mux.com"), "."), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, "The access token needs permissions: ", /*#__PURE__*/_react.default.createElement("strong", null, "Mux Video "), "(Full Access) and ", /*#__PURE__*/_react.default.createElement("strong", null, "Mux Data"), " (Read)", /*#__PURE__*/_react.default.createElement("br", null), "The credentials will be stored safely in a hidden document only available to editors."))), /*#__PURE__*/_react.default.createElement(_default2.default, {
      changeIndicator: false,
      label: "Access Token",
      labelFor: this.tokenInputId,
      level: 0
    }, /*#__PURE__*/_react.default.createElement(_default3.default, {
      id: this.tokenInputId,
      ref: this.firstField,
      onChange: this.handleTokenChanged,
      type: "text",
      value: this.state.token || ''
    })), /*#__PURE__*/_react.default.createElement(_default2.default, {
      changeIndicator: false,
      label: "Secret Key",
      labelFor: this.secretKeyInputId,
      level: 0
    }, /*#__PURE__*/_react.default.createElement(_default3.default, {
      id: this.secretKeyInputId,
      onChange: this.handleSecretKeyChanged,
      type: "text",
      value: this.state.secretKey || ''
    })), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      align: "center"
    }, /*#__PURE__*/_react.default.createElement(_ui.Checkbox, {
      id: this.enableSignedUrlsInputId,
      onChange: this.handleEnableSignedUrls,
      checked: this.state.enableSignedUrls || false,
      style: {
        display: 'block'
      }
    }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
      flex: 1,
      paddingLeft: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/_react.default.createElement("label", {
      htmlFor: this.enableSignedUrlsInputId
    }, "Enable Signed Urls")))), this.state.signingKeyId && this.state.enableSignedUrls ? /*#__PURE__*/_react.default.createElement(_ui.Card, {
      padding: [3, 3, 3],
      radius: 2,
      shadow: 1,
      tone: "caution"
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, "The signing key ID that Sanity will use is:"), /*#__PURE__*/_react.default.createElement(_ui.Code, {
      size: 1
    }, this.state.signingKeyId), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, "This key is only used for previewing content in the Sanity UI.", /*#__PURE__*/_react.default.createElement("br", null), "You should generate a different key to use in your application server."))) : null), /*#__PURE__*/_react.default.createElement(_ui.Inline, {
      space: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      text: "Save",
      loading: isLoading,
      tone: "primary",
      mode: "default",
      onClick: this.handleSaveToken
    }), /*#__PURE__*/_react.default.createElement(_ui.Button, {
      text: "Cancel",
      tone: "primary",
      mode: "bleed",
      onClick: this.handleCancel
    })), error && /*#__PURE__*/_react.default.createElement("p", {
      className: _Setup.default.error
    }, error))));
  }

}

MuxVideoInputSetup.propTypes = propTypes;
MuxVideoInputSetup.defaultProps = {
  secrets: {
    token: null,
    secretKey: null,
    enableSignedUrls: false,
    signingKeyId: null,
    signingKeyPrivate: null
  }
};
var _default = MuxVideoInputSetup;
exports.default = _default;
//# sourceMappingURL=Setup.js.map