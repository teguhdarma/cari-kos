{"version":3,"sources":["../../src/components/Setup.js"],"names":["propTypes","onSave","PropTypes","func","isRequired","onCancel","secrets","shape","token","string","secretKey","enableSignedUrls","bool","signingKeyId","signingKeyPrivate","MuxVideoInputSetup","Component","getDerivedStateFromProps","nextProps","nextState","constructor","props","isLoading","error","event","setState","currentTarget","value","checked","preventDefault","handleError","err","console","state","hasValidSigningKeys","data","id","private_key","message","log","firstField","React","createRef","componentDidMount","current","focus","render","position","handleOnSubmit","tokenInputId","handleTokenChanged","secretKeyInputId","handleSecretKeyChanged","enableSignedUrlsInputId","handleEnableSignedUrls","display","handleSaveToken","handleCancel","styles","defaultProps"],"mappings":"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","sourcesContent":["import {Box, Button, Card, Checkbox, Code, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {uniqueId} from 'lodash'\nimport FormField from 'part:@sanity/components/formfields/default'\nimport TextInput from 'part:@sanity/components/textinputs/default'\nimport PropTypes from 'prop-types'\nimport React, {Component} from 'react'\nimport {createSigningKeys, haveValidSigningKeys, saveSecrets} from '../actions/secrets'\nimport styles from './Setup.css'\n\nconst propTypes = {\n  onSave: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  secrets: PropTypes.shape({\n    token: PropTypes.string,\n    secretKey: PropTypes.string,\n    enableSignedUrls: PropTypes.bool,\n    signingKeyId: PropTypes.string,\n    signingKeyPrivate: PropTypes.string,\n  }),\n}\nclass MuxVideoInputSetup extends Component {\n  tokenInputId = uniqueId('MuxTokenInput')\n  secretKeyInputId = uniqueId('MuxSecretInput')\n  enableSignedUrlsInputId = uniqueId('MuxEnableSignedUrlsInput')\n\n  state = {\n    token: null,\n    secretKey: null,\n    enableSignedUrls: false,\n    isLoading: false,\n    error: null,\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (!nextState.secrets) {\n      return null\n    }\n    if (nextProps.secrets) {\n      return {\n        token: nextProps.secrets.token,\n        secretKey: nextProps.secrets.secretKey,\n        enableSignedUrls: nextProps.secrets.enableSignedUrls,\n        signingKeyId: nextProps.secrets.signingKeyId,\n        signingKeyPrivate: nextProps.secrets.signingKeyPrivate,\n      }\n    }\n    return null\n  }\n\n  constructor(props) {\n    super(props)\n    if (props.secrets) {\n      const {token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate} = props.secrets\n      this.state.token = token\n      this.state.secretKey = secretKey\n      this.state.enableSignedUrls = enableSignedUrls\n      this.state.signingKeyId = signingKeyId\n      this.state.signingKeyPrivate = signingKeyPrivate\n    }\n    this.firstField = React.createRef()\n  }\n\n  componentDidMount() {\n    this.firstField.current.focus()\n  }\n\n  handleTokenChanged = (event) => {\n    this.setState({token: event.currentTarget.value})\n  }\n\n  handleSecretKeyChanged = (event) => {\n    this.setState({secretKey: event.currentTarget.value})\n  }\n\n  handleEnableSignedUrls = (event) => this.setState({enableSignedUrls: event.currentTarget.checked})\n\n  handleCancel = (event) => {\n    this.props.onCancel()\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault()\n  }\n\n  handleSaveToken = async () => {\n    const handleError = (err) => {\n      console.error(err) // eslint-disable-line no-console\n      this.setState({\n        isLoading: false,\n        error: 'Something went wrong saving the token. See console.error for more info.',\n      })\n    }\n\n    this.setState({isLoading: true})\n\n    const {token, secretKey, enableSignedUrls} = this.state || {}\n    let {signingKeyId, signingKeyPrivate} = this.state || {}\n\n    try {\n      await saveSecrets(token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate)\n    } catch (err) {\n      handleError('Error while trying to save secrets:', err)\n      return\n    }\n\n    if (enableSignedUrls) {\n      const hasValidSigningKeys = await haveValidSigningKeys(signingKeyId, signingKeyPrivate)\n\n      if (!hasValidSigningKeys) {\n        try {\n          const {data} = await createSigningKeys()\n          signingKeyId = data.id\n          signingKeyPrivate = data.private_key\n          await saveSecrets(token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate)\n        } catch ({message}) {\n          // eslint-disable-next-line no-console\n          console.log('Error while creating and saving signing key:', message)\n          this.setState({error: message})\n        }\n      }\n    }\n\n    this.setState({isLoading: false})\n\n    this.props.onSave({token, secretKey, enableSignedUrls, signingKeyId, signingKeyPrivate})\n  }\n\n  render() {\n    const {error, isLoading} = this.state\n\n    return (\n      <Box\n        paddingRight={4}\n        paddingLeft={4}\n        paddingBottom={4}\n        paddingTop={4}\n        style={{position: 'relative'}}\n      >\n        <form onSubmit={this.handleOnSubmit}>\n          <Stack space={4}>\n            {!this.state.token && (\n              <Card padding={[3, 3, 3]} radius={2} shadow={1} tone=\"primary\">\n                <Stack space={3}>\n                  <Text size={1}>\n                    To set up a new access token, go to your{' '}\n                    <a\n                      href=\"https://dashboard.mux.com/settings/access-tokens\"\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      account on mux.com\n                    </a>\n                    .\n                  </Text>\n                  <Text size={1}>\n                    The access token needs permissions: <strong>Mux Video </strong>\n                    (Full Access) and <strong>Mux Data</strong> (Read)\n                    <br />\n                    The credentials will be stored safely in a hidden document only available to\n                    editors.\n                  </Text>\n                </Stack>\n              </Card>\n            )}\n            <FormField\n              changeIndicator={false}\n              label=\"Access Token\"\n              labelFor={this.tokenInputId}\n              level={0}\n            >\n              <TextInput\n                id={this.tokenInputId}\n                ref={this.firstField}\n                onChange={this.handleTokenChanged}\n                type=\"text\"\n                value={this.state.token || ''}\n              />\n            </FormField>\n            <FormField\n              changeIndicator={false}\n              label=\"Secret Key\"\n              labelFor={this.secretKeyInputId}\n              level={0}\n            >\n              <TextInput\n                id={this.secretKeyInputId}\n                onChange={this.handleSecretKeyChanged}\n                type=\"text\"\n                value={this.state.secretKey || ''}\n              />\n            </FormField>\n\n            <Stack space={4}>\n              <Flex align=\"center\">\n                <Checkbox\n                  id={this.enableSignedUrlsInputId}\n                  onChange={this.handleEnableSignedUrls}\n                  checked={this.state.enableSignedUrls || false}\n                  style={{display: 'block'}}\n                />\n                <Box flex={1} paddingLeft={3}>\n                  <Text>\n                    <label htmlFor={this.enableSignedUrlsInputId}>Enable Signed Urls</label>\n                  </Text>\n                </Box>\n              </Flex>\n              {this.state.signingKeyId && this.state.enableSignedUrls ? (\n                <Card padding={[3, 3, 3]} radius={2} shadow={1} tone=\"caution\">\n                  <Stack space={3}>\n                    <Text size={1}>The signing key ID that Sanity will use is:</Text>\n                    <Code size={1}>{this.state.signingKeyId}</Code>\n                    <Text size={1}>\n                      This key is only used for previewing content in the Sanity UI.\n                      <br />\n                      You should generate a different key to use in your application server.\n                    </Text>\n                  </Stack>\n                </Card>\n              ) : null}\n            </Stack>\n\n            <Inline space={2}>\n              <Button\n                text=\"Save\"\n                loading={isLoading}\n                tone=\"primary\"\n                mode=\"default\"\n                onClick={this.handleSaveToken}\n              />\n\n              <Button text=\"Cancel\" tone=\"primary\" mode=\"bleed\" onClick={this.handleCancel} />\n            </Inline>\n\n            {error && <p className={styles.error}>{error}</p>}\n          </Stack>\n        </form>\n      </Box>\n    )\n  }\n}\n\nMuxVideoInputSetup.propTypes = propTypes\n\nMuxVideoInputSetup.defaultProps = {\n  secrets: {\n    token: null,\n    secretKey: null,\n    enableSignedUrls: false,\n    signingKeyId: null,\n    signingKeyPrivate: null,\n  },\n}\n\nexport default MuxVideoInputSetup\n"],"file":"Setup.js"}