{"version":3,"sources":["../../src/actions/upload.js"],"names":["cancelUpload","uuid","client","observable","request","url","clientConfig","dataset","withCredentials","method","uploadUrl","options","testUrl","pipe","validUrl","type","json","status","Error","enableSignedUrls","muxBody","input","playback_policy","mp4_support","config","query","JSON","stringify","filename","split","slice","headers","result","asset","results","document","id","uploadFile","file","testFile","fileOptions","body","upload","event","updateAssetDocumentFromUpload","doc","err","getUpload","assetId","pollUpload","maxTries","pollInterval","tries","Promise","resolve","reject","setInterval","data","asset_id","clearInterval","_id","_type","playbackId","playback_ids","uploadId","createOrReplace","then","window","File","optionsFromFile","error","parsed","URL","protocol","match","opts","fileOpts","preserveFilename","undefined","name","contentType"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport {uuid as generateUuid} from '@sanity/uuid'\nimport config from '../config'\nimport {isString} from 'lodash'\nimport {concat, defer, from, of, throwError} from 'rxjs'\nimport {catchError, mergeMap, mergeMapTo, switchMap} from 'rxjs/operators'\nimport {getAsset} from '../actions/assets'\nimport {testSecretsObservable} from '../actions/secrets'\nimport client from '../clients/SanityClient'\nimport {createUpChunkObservable} from '../clients/upChunkObservable'\n\nexport function cancelUpload(uuid) {\n  return client.observable.request({\n    url: `/addons/mux/uploads/${client.clientConfig.dataset}/${uuid}`,\n    withCredentials: true,\n    method: 'DELETE',\n  })\n}\n\nexport function uploadUrl(url, options = {}) {\n  return testUrl(url).pipe(\n    switchMap((validUrl) => {\n      return concat(\n        of({type: 'url', url: validUrl}),\n        testSecretsObservable().pipe(\n          switchMap((json) => {\n            if (!json || !json.status) {\n              return throwError(new Error('Invalid credentials'))\n            }\n            const uuid = generateUuid()\n            const {enableSignedUrls} = options\n            const muxBody = {\n              input: validUrl,\n              playback_policy: [enableSignedUrls ? 'signed' : 'public'],\n              mp4_support: config.mp4_support,\n            }\n            const query = {\n              muxBody: JSON.stringify(muxBody),\n              filename: validUrl.split('/').slice(-1)[0],\n            }\n\n            const dataset = client.clientConfig.dataset\n            return defer(() =>\n              client.observable.request({\n                url: `/addons/mux/assets/${dataset}`,\n                withCredentials: true,\n                method: 'POST',\n                headers: {\n                  'MUX-Proxy-UUID': uuid,\n                  'Content-Type': 'application/json',\n                },\n                query,\n              })\n            ).pipe(\n              mergeMap((result) => {\n                const asset =\n                  (result && result.results && result.results[0] && result.results[0].document) ||\n                  null\n\n                if (!asset) {\n                  return throwError(new Error('No asset document returned'))\n                }\n                return of({type: 'success', id: uuid, asset})\n              })\n            )\n          })\n        )\n      )\n    })\n  )\n}\n\nexport function uploadFile(file, options = {}) {\n  return testFile(file).pipe(\n    switchMap((fileOptions) => {\n      return concat(\n        of({type: 'file', file: fileOptions}),\n        testSecretsObservable().pipe(\n          switchMap((json) => {\n            if (!json || !json.status) {\n              return throwError(new Error('Invalid credentials'))\n            }\n            const uuid = generateUuid()\n            const {enableSignedUrls} = options\n            const body = {\n              mp4_support: config.mp4_support,\n              playback_policy: [enableSignedUrls ? 'signed' : 'public'],\n            }\n\n            return concat(\n              of({type: 'uuid', uuid}),\n              defer(() =>\n                client.observable.request({\n                  url: `/addons/mux/uploads/${client.clientConfig.dataset}`,\n                  withCredentials: true,\n                  method: 'POST',\n                  headers: {\n                    'MUX-Proxy-UUID': uuid,\n                    'Content-Type': 'application/json',\n                  },\n                  body,\n                })\n              ).pipe(\n                mergeMap((result) => {\n                  return createUpChunkObservable(uuid, result.upload.url, file).pipe(\n                    // eslint-disable-next-line max-nested-callbacks\n                    mergeMap((event) => {\n                      if (event.type !== 'success') {\n                        return of(event)\n                      }\n                      return from(updateAssetDocumentFromUpload(uuid)).pipe(\n                        // eslint-disable-next-line max-nested-callbacks\n                        mergeMap((doc) => of({...event, asset: doc}))\n                      )\n                    }),\n                    // eslint-disable-next-line max-nested-callbacks\n                    catchError((err) => {\n                      // Delete asset document\n                      return cancelUpload(uuid).pipe(mergeMapTo(throwError(err)))\n                    })\n                  )\n                })\n              )\n            )\n          })\n        )\n      )\n    })\n  )\n}\n\nexport function getUpload(assetId) {\n  return client.request({\n    url: `/addons/mux/uploads/${client.clientConfig.dataset}/${assetId}`,\n    withCredentials: true,\n    method: 'GET',\n  })\n}\n\nexport default {uploadUrl, uploadFile, getUpload}\n\nfunction pollUpload(uuid) {\n  const maxTries = 10\n  let pollInterval\n  let tries = 0\n  let assetId\n  let upload\n  return new Promise((resolve, reject) => {\n    pollInterval = setInterval(async () => {\n      try {\n        upload = await getUpload(uuid)\n      } catch (err) {\n        reject(err)\n        return\n      }\n      assetId = upload && upload.data && upload.data.asset_id\n      if (assetId) {\n        clearInterval(pollInterval)\n        resolve(upload)\n      }\n      if (tries > maxTries) {\n        clearInterval(pollInterval)\n        reject(new Error('Upload did not finish'))\n      }\n      tries++\n    }, 2000)\n  })\n}\n\nasync function updateAssetDocumentFromUpload(uuid) {\n  let upload\n  let asset\n  try {\n    upload = await pollUpload(uuid)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n  try {\n    asset = await getAsset(upload.data.asset_id)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n\n  const doc = {\n    _id: uuid,\n    _type: 'mux.videoAsset',\n    status: asset.data.status,\n    data: asset.data,\n    assetId: asset.data.id,\n    playbackId: asset.data.playback_ids[0].id,\n    uploadId: upload.data.id,\n  }\n  return client.createOrReplace(doc).then(() => {\n    return doc\n  })\n}\n\nfunction testFile(file) {\n  if (typeof window !== 'undefined' && file instanceof window.File) {\n    const fileOptions = optionsFromFile(file)\n    return of(fileOptions)\n  }\n  return throwError(new Error('Invalid file'))\n}\n\nfunction testUrl(url) {\n  const error = new Error('Invalid URL')\n  if (!isString(url)) {\n    return throwError(error)\n  }\n  let parsed\n  try {\n    parsed = new URL(url)\n  } catch (err) {\n    return throwError(error)\n  }\n  if (parsed && !parsed.protocol.match(/http:|https:/)) {\n    return throwError(error)\n  }\n  return of(url)\n}\n\nfunction optionsFromFile(opts, file) {\n  if (typeof window === 'undefined' || !(file instanceof window.File)) {\n    return opts\n  }\n  const fileOpts = {\n    filename: opts.preserveFilename === false ? undefined : file.name,\n    contentType: file.type,\n  }\n\n  return {\n    ...{\n      filename: opts.preserveFilename === false ? undefined : file.name,\n      contentType: file.type,\n    },\n    fileOpts,\n  }\n}\n"],"file":"upload.js"}