{"version":3,"sources":["../../src/clients/upChunkObservable.js"],"names":["createUpChunkObservable","uuid","uploadUrl","source","Observable","subscriber","upchunk","UpChunk","createUpload","endpoint","file","chunkSize","successHandler","next","type","id","complete","errorHandler","data","error","Error","detail","message","progressHandler","percent","offlineHandler","pause","onlineHandler","resume","on","abort"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEO,SAASA,uBAAT,CAAiCC,IAAjC,EAAuCC,SAAvC,EAAkDC,MAAlD,EAA0D;AAC/D,SAAO,IAAIC,gBAAJ,CAAgBC,UAAD,IAAgB;AACpC,QAAMC,OAAO,GAAGC,OAAO,CAACC,YAAR,CAAqB;AACnCC,MAAAA,QAAQ,EAAEP,SADyB;AAEnCQ,MAAAA,IAAI,EAAEP,MAF6B;AAGnCQ,MAAAA,SAAS,EAAE,IAHwB,CAGlB;;AAHkB,KAArB,CAAhB;;AAMA,QAAMC,cAAc,GAAG,MAAM;AAC3BP,MAAAA,UAAU,CAACQ,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,SADQ;AAEdC,QAAAA,EAAE,EAAEd;AAFU,OAAhB;AAIAI,MAAAA,UAAU,CAACW,QAAX;AACD,KAND;;AAQA,QAAMC,YAAY,GAAIC,IAAD,IAAUb,UAAU,CAACc,KAAX,CAAiB,IAAIC,KAAJ,CAAUF,IAAI,CAACG,MAAL,CAAYC,OAAtB,CAAjB,CAA/B;;AAEA,QAAMC,eAAe,GAAIL,IAAD,IAAU;AAChC,aAAOb,UAAU,CAACQ,IAAX,CAAgB;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBU,QAAAA,OAAO,EAAEN,IAAI,CAACG;AAAjC,OAAhB,CAAP;AACD,KAFD;;AAIA,QAAMI,cAAc,GAAIP,IAAD,IAAU;AAC/BZ,MAAAA,OAAO,CAACoB,KAAR;AACArB,MAAAA,UAAU,CAACQ,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,OADQ;AAEdC,QAAAA,EAAE,EAAEd;AAFU,OAAhB;AAID,KAND;;AAQA,QAAM0B,aAAa,GAAIT,IAAD,IAAU;AAC9BZ,MAAAA,OAAO,CAACsB,MAAR;AACAvB,MAAAA,UAAU,CAACQ,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,QADQ;AAEdC,QAAAA,EAAE,EAAEd;AAFU,OAAhB;AAID,KAND;;AAQAK,IAAAA,OAAO,CAACuB,EAAR,CAAW,SAAX,EAAsBjB,cAAtB;AACAN,IAAAA,OAAO,CAACuB,EAAR,CAAW,OAAX,EAAoBZ,YAApB;AACAX,IAAAA,OAAO,CAACuB,EAAR,CAAW,UAAX,EAAuBN,eAAvB;AACAjB,IAAAA,OAAO,CAACuB,EAAR,CAAW,SAAX,EAAsBJ,cAAtB;AACAnB,IAAAA,OAAO,CAACuB,EAAR,CAAW,QAAX,EAAqBF,aAArB;AAEA,WAAO,MAAMrB,OAAO,CAACwB,KAAR,EAAb;AACD,GA5CM,CAAP;AA6CD","sourcesContent":["import * as UpChunk from '@mux/upchunk'\nimport {Observable} from 'rxjs'\n\nexport function createUpChunkObservable(uuid, uploadUrl, source) {\n  return new Observable((subscriber) => {\n    const upchunk = UpChunk.createUpload({\n      endpoint: uploadUrl,\n      file: source,\n      chunkSize: 5120, // Uploads the file in ~5mb chunks\n    })\n\n    const successHandler = () => {\n      subscriber.next({\n        type: 'success',\n        id: uuid,\n      })\n      subscriber.complete()\n    }\n\n    const errorHandler = (data) => subscriber.error(new Error(data.detail.message))\n\n    const progressHandler = (data) => {\n      return subscriber.next({type: 'progress', percent: data.detail})\n    }\n\n    const offlineHandler = (data) => {\n      upchunk.pause()\n      subscriber.next({\n        type: 'pause',\n        id: uuid,\n      })\n    }\n\n    const onlineHandler = (data) => {\n      upchunk.resume()\n      subscriber.next({\n        type: 'resume',\n        id: uuid,\n      })\n    }\n\n    upchunk.on('success', successHandler)\n    upchunk.on('error', errorHandler)\n    upchunk.on('progress', progressHandler)\n    upchunk.on('offline', offlineHandler)\n    upchunk.on('online', onlineHandler)\n\n    return () => upchunk.abort()\n  })\n}\n"],"file":"upChunkObservable.js"}